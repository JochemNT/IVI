Traceback (most recent call last):
  File "/opt/homebrew/lib/python3.11/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/opt/homebrew/lib/python3.11/site-packages/nbclient/client.py", line 1314, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/homebrew/lib/python3.11/site-packages/jupyter_core/utils/__init__.py", line 165, in wrapped
    return loop.run_until_complete(inner)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/homebrew/Cellar/python@3.11/3.11.5/Frameworks/Python.framework/Versions/3.11/lib/python3.11/asyncio/base_events.py", line 653, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "/opt/homebrew/lib/python3.11/site-packages/nbclient/client.py", line 709, in async_execute
    await self.async_execute_cell(
  File "/opt/homebrew/lib/python3.11/site-packages/nbclient/client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/opt/homebrew/lib/python3.11/site-packages/nbclient/client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
# Plot Hoogst behaalde onderwijsniveau in Nederlandse gemeentes

gemeenten_shapefile = 'gemeente_2020_v3.shp'

gdf = gpd.read_file(gemeenten_shapefile)

dataset = pd.read_csv('hoogstbehaald_onderwijsniveau_schoongemaakt.csv', sep=',')
merged = gdf.merge(dataset, how='left', left_on='GM_NAAM', right_on='Regio\'s')

fig, ax = plt.subplots(1, 1, figsize=(10, 8))

cmap = plt.cm.get_cmap('Blues')
norm = Normalize(vmin=merged['Laag onderwijsniveau (%)'].min(), vmax=merged['Laag onderwijsniveau (%)'].max())

merged.plot(column='Laag onderwijsniveau (%)', cmap=cmap, linewidth=0.8, ax=ax, edgecolor='1.0', legend=False, missing_kwds={'color': 'gray'})

sm = plt.cm.ScalarMappable(cmap=cmap, norm=norm)
sm.set_array([])
cbar = plt.colorbar(sm, ax=ax, orientation='vertical', shrink=0.8)
cbar.set_label('Laag onderwijsniveau (%)')

ax.set_title('Percentage laag onderwijs niveau in Nederlandse gemeentes')

plt.show()

fig, ax = plt.subplots(1, 1, figsize=(10, 8))

cmap = plt.cm.get_cmap('Greens')
norm = Normalize(vmin=merged['Middelbaar onderwijsniveau (%)'].min(), vmax=merged['Middelbaar onderwijsniveau (%)'].max())

merged.plot(column='Middelbaar onderwijsniveau (%)', cmap=cmap, linewidth=0.8, ax=ax, edgecolor='1.0', legend=False, missing_kwds={'color': 'gray'})

sm = plt.cm.ScalarMappable(cmap=cmap, norm=norm)
sm.set_array([])
cbar = plt.colorbar(sm, ax=ax, orientation='vertical', shrink=0.8)
cbar.set_label('Middelbaar onderwijsniveau (%)')

ax.set_title('Percentage middelbaar onderwijs niveau in Nederlandse gemeentes')

plt.show()

fig, ax = plt.subplots(1, 1, figsize=(10, 8))

cmap = plt.cm.get_cmap('Reds')
norm = Normalize(vmin=merged['Hoog onderwijsniveau (%)'].min(), vmax=merged['Hoog onderwijsniveau (%)'].max())

merged.plot(column='Hoog onderwijsniveau (%)', cmap=cmap, linewidth=0.8, ax=ax, edgecolor='1.0', legend=False, missing_kwds={'color': 'gray'})

sm = plt.cm.ScalarMappable(cmap=cmap, norm=norm)
sm.set_array([])
cbar = plt.colorbar(sm, ax=ax, orientation='vertical', shrink=0.8)
cbar.set_label('Hoog onderwijsniveau (%)')

ax.set_title('Percentage hoog onderwijs niveau in Nederlandse gemeentes')

plt.show()
------------------


[0;31m---------------------------------------------------------------------------[0m
[0;31mNameError[0m                                 Traceback (most recent call last)
Cell [0;32mIn[2], line 10[0m
[1;32m      7[0m dataset [38;5;241m=[39m pd[38;5;241m.[39mread_csv([38;5;124m'[39m[38;5;124mhoogstbehaald_onderwijsniveau_schoongemaakt.csv[39m[38;5;124m'[39m, sep[38;5;241m=[39m[38;5;124m'[39m[38;5;124m,[39m[38;5;124m'[39m)
[1;32m      8[0m merged [38;5;241m=[39m gdf[38;5;241m.[39mmerge(dataset, how[38;5;241m=[39m[38;5;124m'[39m[38;5;124mleft[39m[38;5;124m'[39m, left_on[38;5;241m=[39m[38;5;124m'[39m[38;5;124mGM_NAAM[39m[38;5;124m'[39m, right_on[38;5;241m=[39m[38;5;124m'[39m[38;5;124mRegio[39m[38;5;130;01m\'[39;00m[38;5;124ms[39m[38;5;124m'[39m)
[0;32m---> 10[0m fig, ax [38;5;241m=[39m [43mplt[49m[38;5;241m.[39msubplots([38;5;241m1[39m, [38;5;241m1[39m, figsize[38;5;241m=[39m([38;5;241m10[39m, [38;5;241m8[39m))
[1;32m     12[0m cmap [38;5;241m=[39m plt[38;5;241m.[39mcm[38;5;241m.[39mget_cmap([38;5;124m'[39m[38;5;124mBlues[39m[38;5;124m'[39m)
[1;32m     13[0m norm [38;5;241m=[39m Normalize(vmin[38;5;241m=[39mmerged[[38;5;124m'[39m[38;5;124mLaag onderwijsniveau ([39m[38;5;124m%[39m[38;5;124m)[39m[38;5;124m'[39m][38;5;241m.[39mmin(), vmax[38;5;241m=[39mmerged[[38;5;124m'[39m[38;5;124mLaag onderwijsniveau ([39m[38;5;124m%[39m[38;5;124m)[39m[38;5;124m'[39m][38;5;241m.[39mmax())

[0;31mNameError[0m: name 'plt' is not defined

